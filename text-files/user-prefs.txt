name: always_send_absolute_dominion
description: Always send nodes that (user is capable of learning AND are successors of what they've already learned).
type: bool
default: true

name: always_send_learnable_pregoals
description: Always send :number: of nodes that the user is capable of learning and works towards their designated (or automatically chosen) goal.
type: bool
default: true

name: send_learnable_pregoal_number
description: The NUMBER of learnable pregoals to send whenever we send learnable pregoals over.
type: natural number 1 or more
default: 1

name: always_accept_suggested_goal
description: When the user asks for a goal suggestion, the first suggestion given is automatically set as the user's new goal.
type: bool
default: false

name: always_send_goal
description: Displays the user's goal in the client graph, even if it is not yet learnable.
type: bool
default: false

name: always_send_unlearned_dependency_tree_of_goal
description: Displays the entire unlearned dependency tree of the user's goal, including pregoals which are not yet learnable.
type: bool
default: false
warning! overrides behavior of always-send-learnable-pregoals

name: restrict_to_subject
description: user can only get things within the subject
type: bool
default: false

name: enforce_learn_order
description: user can only learn things in order (with exception of starting nodes).  That is, they can ONLY learn LEARNABLE nodes.
type: string (can be "true", "false", or "flexible" (to allow user to override when they really want))
default: true

name: goal_node_id
description: user can choose a goal to work toward.  This can also be set by calling choose_goal.  This will be used by choose_learnable_pregoals
type: string (must be an existing node id)
default: None

name: subject
description: 
type: string (must be an existing subject)
default: 'graph theory'
